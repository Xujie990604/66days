float 浮动属性
    浮动属性会脱离正常的文档布局流。并吸附到父容器的x边。
    在正常布局中位于该浮动元素元素以下的文本，此时会围绕着浮动元素。
    浮动内容仍然遵循盒子模型诸如外边距和边界

    使用浮动会让可视化的布局与源顺序不同。

    因为所有在浮动下面的不浮动的元素都将围绕浮动元素进行包装，所以需要消除浮动，意味着从此处消除浮动。
    消除浮动没有闭合浮动说的严谨。

    浮动的元素在某些行为上特殊
        1.他们在父元素的有效高度为零
        2.非浮动的元素的外边距不能(指的是外边距比较小的情况下，如果外边距大小超过了浮动元素的大小，就可以拉开边距)用来和浮动元素创建空间。
        (浮动元素的外边距可以直接和非浮动元素创建边距)

    浮动元素产生了浮动流：
        所有产生了浮动流的元素，块级元素见不到他们。
        产生了bfc的元素和文本类型的元素能够看到他们，
    
    如何触发一个盒子的bfc
        position:absolute;
        display:inline-block;
        float；left/right;
        overflow:hidden;

    利用伪元素来解决父级元素（div）包不住浮动元素
    .clearfix::after {
        content:"";
        clear:both;
        display:table;
    }

    如果只是想要兄弟元素不在围绕前面的浮动元素浮动时，就给兄弟加clear：both；
    
    一个块级元素水平排列在一个浮动元素的右边时，块级元素会被浮动元素覆盖，
    但是文字不会被覆盖，需要加上margin-left:浮动元素宽度；(纯流体布局的缺点，必须要知道浮动元素的大小才能正确的设置margin)

    浮动实现的两列布局，下面的不浮动的div想要与浮动元素有margin
      1.如果没有清除浮动，需要设置的margin大小超过浮动元素的高度，(并且需要考虑margin塌陷的存在，否则直接把父元素带下来)
      2.如果清除了浮动，无论设置多大的margin，都不会和浮动元素产生间隔
      3.在想要不浮动的div和浮动元素之间加上一个专门用来清除浮动的div。到时候想要显示内容的div就可以正常使用margin来拉开上边距了。


    ！！！一个触发了BFC的元素水平排列在浮动元素的右边时，因为bfc元素的特性。在与浮动元素做兄弟时，会和浮动元素排列一行。
    但是不会和浮动元素重合。所以直接在浮动元素加一个margin-right。就能和BFC元素拉开距离。并且浮动元素大小变化，不影响布局。
    不过让元素变成bfc的语句，通常都会有很多副作用。不建议大型布局时使用这个。

    1.破坏性：设置了float属性的父元素会坍塌(因为和他结构上的父元素根本没在一层)；
    2.包裹性：设置了float属性的div元素会包裹(设置了浮动的div，不会自己占满一行)；不然后面的文字无法环绕它
    3.消空格： 脱离了文档流那么换行，空格啥的都不管用了。尽可能的去和其他浮动元素靠拢，浮动的几个图片之间没有一点间隔。

    4.当你的元素被设为 position：absolute； 和 float：left/right 时
        会从内部把元素转换为inline-block形式；
