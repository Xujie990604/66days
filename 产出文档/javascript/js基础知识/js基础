var 申请变量

命名规则：
    变量只能以字母 - $ 开头
    变量内部可以使用数字
    关键字，和保留字不能使用


原始值： number Boolean String undefined（未定义，未赋值） null（占位置，空值）
stack 栈 先进去的后出来 拷贝时拷贝的是数值
栈数据 不可更改，直接找一个新的地址放入新的值


引用值： arr object function
heap 堆   拷贝时拷贝的是地址

引用值比较比较的是地址:    {} == {} //false
原始值比较的是数值(有隐式类型转换);    var a = 1; var b = true;
                                    a == b //true
                                    a===b  //false
    == 只比较值   ===不仅比较值，还比较数据类型


  var arr1 = [100];
  var arr2 = arr1;
  arr1=[100,80];
  console.log(arr2);//[100] 因为现在是直接建立了一个新的arr1覆盖了原来的arr1

  var arr1 = [100];
  var arr2 = arr1;
  arr1.push(80);
  console.log(arr2);//[100,80] 因为数组是引用值，arr1和arr2公用一个堆内存



五个基本把数据类型：number Boolean String undefined（未定义，未赋值） null（占位置，空值）
混合数据类型: object

js天生是浮点型
js是动态类型语言
NAN not a number 非数 是数字类型

错误 
    1.（低级错误）语法错误
        代码一行也不会执行

    2. 逻辑错误（标准错误）
        后续代码不会执行

无论哪种错误都不会影响到其他代码块的执行

"+" 
   1.数学运算，字符串链接
   2.任何数据类型加字符串都等于字符串


