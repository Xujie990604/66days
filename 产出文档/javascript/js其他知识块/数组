var arr = [];
数组字面量定义

var arr = new Array();
数组构造方法定义  所以数组的所有方法来源于prototype.Array()

唯一的区别就是：如果构造方法里面只写一个值，那么这个值会被识别为长度。长度为n的稀松数组


js里面的数组十分不严格，几乎不报错。数组是特殊的对象。
溢出读和溢出写都不会报错。

改变数组的方法
push()最后一位增加  pop()最后一位剪切  unshift()第一位增加  shift()第一位剪切  reverse()逆转

splice()从第几位开始，截取多少的长度，在切口处添加新的数据。并且会把截取的数据返回出来。

sort()给数组排序 但是sort是字符串比较不是我们想要的数字比较，所以需要我们自己来实现。
1.必须写两个形参
2.看返回值 1）当返回值为负数时，前面的数在前面
            2）当返回值为正数时，后面的数在前面
            3）为0 ，不动
(传参时按照冒泡排序的方式传参)

arr.sort (function (a,b){
    if (a > b) {
        return 1;
    } else {              简化为 return a - b;升序
        return -1;         简化为 return b - a;降序
    }
})

题目：把数组打乱，随机返回(学会灵活应用ab这两个参数，能够给很多东西排序)
Math.random()随机返回一个(0,1)之间的数
Math.random() - 0.5 随机返回一个(-0.5,0.5)得数


数组中的方法大多数都有下标为负数(-1就是倒数第一位)。实现方法
pos += pos > 0 ? 0 : this.length;

不改变数组的方法

concat拼接数组，生成一个新数组。不改变原数组
toString
slice()从该位开始截取，截取到该位，不改变原数组。 如果一个参数就是从该位开始截取，截取到最后一位。
join("")参数是什么，就按照什么来连接数组，并且返回字符串。没有参数的话，默认用逗号连接
split("")参数是什么，就按照什么来拆分字符串，返回数组。