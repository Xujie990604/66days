为何使用fetch来获取本地的数据时，必须跑在服务器上？
公网ip和内网ip。公网ip是分配给服务器的，手机这种普通设备没有公网ip。
宏任务和微任务
css动画的优化，难道使用absolute脱离文档流不能减少整个页面的重排吗？？？？
http的缺点
http的优化
http报文的重要首部
http的方法的详解，定义和使用方式
HTTP2.0
网络攻击xss和CSRF
输入URl的完整过程给过一遍
js 的BOM的方法，下拉加载和上拉刷新。懒加载
debugger的使用和关闭
物理像素和css像素，分辨率，失真？？？
vueCLi4的配置文件的书写格式。


使用一个Vue的Ui框架，把分类的那个部分实现。
把项目的登录和注册部分实现。配合着Vuex的使用。
服务器的部署，宝塔的使用，等到b站的视频看完了在说。
看完b站的vue视频之后，把Vue的知识点系统的总结一遍。看不懂的丢掉

html的表单的使用，随用随查，总结到html的表单当中，总结的时候每种样式都要留下代码。

代码的良好格式

git 在终端中使用的时候需要一个文件一个文件的add吗

ES6的class的使用。
Vue的路由总结和复习一遍。


better-scroll插件的使用的时候，必须要从PC端切换回移动端，才能使用滚动功能
三种分类的话，已经加载过的位置，不会因为更换了tab而重新加载
老师封装的轮播图看看实现.

vm.nextTick()和Vue.nextTick()的区别
Vue中父组件和子组件谁先被创建和挂载。


vue中何时函数的this指向为undefined?那些在methods属性里面的函数里面的函数，this指向是undefined？？？不是window吗？
watch的定义和用法？有截图
$listener的使用





this的指向的问题的总结。apply，call，bind方法的总结。
异步函数的请求： 一个函数中包含异步的请求，异步请求的下面就是需要本次请求结束才能执行的代码。如何保证已经做完了异步的请求在执行的下面的语句
一个函数中包含一个异步请求的函数，这个子函数异步请求没有结束的话，父函数是等待子函数执行完之后再执行父函数下面的函数还是,先挂起自己，直接执行自己下面的函数


项目的知识点

如果移动端放到了服务器上，滚动会十分卡。需要使用插件
用css实现局部的滚动，只需要给父元素一个给定的大小，然后设置overflow-y: scroll;就会自动实现超出部分隐藏，在父元素内部实现局部滚动
使用better-scroll的话。在绑定的wrapper元素内部，只会管理第一个子元素。new BScroll()要在mounted中实现。不然找不到DOM
better-scroll的高度的bug，需要在合适的时机调用refresh()方法来重新计算可滚动区域的大小。
在每一个图片加载完之后都会调用refresh函数更加科学

详情页的防抖函数的使用,注意作用域，可以把包装过的防抖函数放在data中。

给tabcontrol使用吸顶效果的时候出现了很多的问题，在batter-scroll中fixed和sticky属性全部失效。
最后采用了偷梁换柱的方法，使用两个顶部栏，在到达位置之前隐藏 固定位置的那个tab，显示在滚动插件里面的那个tab。
等到滚动到下面的插件即将消失的时候，偷梁换柱，直接显示固定位置的tab，达到视觉上的吸顶的效果。bug是使用了两个组件，每个组件都会
维护自己的一份数据，这两个tab的一些数据可能不通用。需要手动设置一下。

使用keep-alive包装过的路由视图会保留状态，组价的destory和created钩子函数 不会再被调用。但是可以使用activated和deactivated钩子函数
来表示活跃的和失活的状态
keep-alive有一个exclude属性,用来说明哪个路由不需要keep-alive。(不写路由的名字，写组件的名字？？？？弹幕说路由加上name)

v-for的遍历可以遍历数字。很他妈神奇
服务器发过来的时间都是时间戳，使用工具函数事件戳变成常见的时间的格式(时间戳一般是秒，Date对象是毫秒)

||的神奇使用，如果有几种情况的话。把先考虑的情况放在前面，前面的条件符合要求的话就先考虑前面的情况，如果前面的不符合情况的话。
就会看后面的条件。如果都不符合条件的话，就不会执行任何情况。

借用better-scroll的scroll函数和position参数。来实现滚动到对应部分时，对应的标题被选中。使用到了一个hack方式。
比较神奇。总结一下